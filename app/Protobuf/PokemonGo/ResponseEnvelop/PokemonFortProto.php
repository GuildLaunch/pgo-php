<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : pokemongo.proto
 */


namespace Protobuf\PokemonGo\ResponseEnvelop;

/**
 * Protobuf message : pokemongo.ResponseEnvelop.PokemonFortProto
 */
class PokemonFortProto extends \Protobuf\AbstractMessage
{

    /**
     * @var \Protobuf\UnknownFieldSet
     */
    protected $unknownFieldSet = null;

    /**
     * @var \Protobuf\Extension\ExtensionFieldMap
     */
    protected $extensions = null;

    /**
     * FortId required string = 1
     *
     * @var string
     */
    protected $FortId = null;

    /**
     * LastModifiedMs required int64 = 2
     *
     * @var int
     */
    protected $LastModifiedMs = null;

    /**
     * Latitude required double = 3
     *
     * @var float
     */
    protected $Latitude = null;

    /**
     * Longitude required double = 4
     *
     * @var float
     */
    protected $Longitude = null;

    /**
     * Team required int32 = 5
     *
     * @var int
     */
    protected $Team = null;

    /**
     * GuardPokemonId required int32 = 6
     *
     * @var int
     */
    protected $GuardPokemonId = null;

    /**
     * GuardPokemonLevel required int32 = 7
     *
     * @var int
     */
    protected $GuardPokemonLevel = null;

    /**
     * Enabled required bool = 8
     *
     * @var bool
     */
    protected $Enabled = null;

    /**
     * FortType required int32 = 9
     *
     * @var int
     */
    protected $FortType = null;

    /**
     * GymPoints required int64 = 10
     *
     * @var int
     */
    protected $GymPoints = null;

    /**
     * IsInBattle required bool = 11
     *
     * @var bool
     */
    protected $IsInBattle = null;

    /**
     * ActivePokemon optional message = 13
     *
     * @var \Protobuf\PokemonGo\ResponseEnvelop\MapPokemonProto
     */
    protected $ActivePokemon = null;

    /**
     * CooldownCompleteMs required int64 = 14
     *
     * @var int
     */
    protected $CooldownCompleteMs = null;

    /**
     * Sponsor required int32 = 15
     *
     * @var int
     */
    protected $Sponsor = null;

    /**
     * RenderingType optional int32 = 16
     *
     * @var int
     */
    protected $RenderingType = null;

    /**
     * Check if 'FortId' has a value
     *
     * @return bool
     */
    public function hasFortId()
    {
        return $this->FortId !== null;
    }

    /**
     * Get 'FortId' value
     *
     * @return string
     */
    public function getFortId()
    {
        return $this->FortId;
    }

    /**
     * Set 'FortId' value
     *
     * @param string $value
     */
    public function setFortId($value)
    {
        $this->FortId = $value;
    }

    /**
     * Check if 'LastModifiedMs' has a value
     *
     * @return bool
     */
    public function hasLastModifiedMs()
    {
        return $this->LastModifiedMs !== null;
    }

    /**
     * Get 'LastModifiedMs' value
     *
     * @return int
     */
    public function getLastModifiedMs()
    {
        return $this->LastModifiedMs;
    }

    /**
     * Set 'LastModifiedMs' value
     *
     * @param int $value
     */
    public function setLastModifiedMs($value)
    {
        $this->LastModifiedMs = $value;
    }

    /**
     * Check if 'Latitude' has a value
     *
     * @return bool
     */
    public function hasLatitude()
    {
        return $this->Latitude !== null;
    }

    /**
     * Get 'Latitude' value
     *
     * @return float
     */
    public function getLatitude()
    {
        return $this->Latitude;
    }

    /**
     * Set 'Latitude' value
     *
     * @param float $value
     */
    public function setLatitude($value)
    {
        $this->Latitude = $value;
    }

    /**
     * Check if 'Longitude' has a value
     *
     * @return bool
     */
    public function hasLongitude()
    {
        return $this->Longitude !== null;
    }

    /**
     * Get 'Longitude' value
     *
     * @return float
     */
    public function getLongitude()
    {
        return $this->Longitude;
    }

    /**
     * Set 'Longitude' value
     *
     * @param float $value
     */
    public function setLongitude($value)
    {
        $this->Longitude = $value;
    }

    /**
     * Check if 'Team' has a value
     *
     * @return bool
     */
    public function hasTeam()
    {
        return $this->Team !== null;
    }

    /**
     * Get 'Team' value
     *
     * @return int
     */
    public function getTeam()
    {
        return $this->Team;
    }

    /**
     * Set 'Team' value
     *
     * @param int $value
     */
    public function setTeam($value)
    {
        $this->Team = $value;
    }

    /**
     * Check if 'GuardPokemonId' has a value
     *
     * @return bool
     */
    public function hasGuardPokemonId()
    {
        return $this->GuardPokemonId !== null;
    }

    /**
     * Get 'GuardPokemonId' value
     *
     * @return int
     */
    public function getGuardPokemonId()
    {
        return $this->GuardPokemonId;
    }

    /**
     * Set 'GuardPokemonId' value
     *
     * @param int $value
     */
    public function setGuardPokemonId($value)
    {
        $this->GuardPokemonId = $value;
    }

    /**
     * Check if 'GuardPokemonLevel' has a value
     *
     * @return bool
     */
    public function hasGuardPokemonLevel()
    {
        return $this->GuardPokemonLevel !== null;
    }

    /**
     * Get 'GuardPokemonLevel' value
     *
     * @return int
     */
    public function getGuardPokemonLevel()
    {
        return $this->GuardPokemonLevel;
    }

    /**
     * Set 'GuardPokemonLevel' value
     *
     * @param int $value
     */
    public function setGuardPokemonLevel($value)
    {
        $this->GuardPokemonLevel = $value;
    }

    /**
     * Check if 'Enabled' has a value
     *
     * @return bool
     */
    public function hasEnabled()
    {
        return $this->Enabled !== null;
    }

    /**
     * Get 'Enabled' value
     *
     * @return bool
     */
    public function getEnabled()
    {
        return $this->Enabled;
    }

    /**
     * Set 'Enabled' value
     *
     * @param bool $value
     */
    public function setEnabled($value)
    {
        $this->Enabled = $value;
    }

    /**
     * Check if 'FortType' has a value
     *
     * @return bool
     */
    public function hasFortType()
    {
        return $this->FortType !== null;
    }

    /**
     * Get 'FortType' value
     *
     * @return int
     */
    public function getFortType()
    {
        return $this->FortType;
    }

    /**
     * Set 'FortType' value
     *
     * @param int $value
     */
    public function setFortType($value)
    {
        $this->FortType = $value;
    }

    /**
     * Check if 'GymPoints' has a value
     *
     * @return bool
     */
    public function hasGymPoints()
    {
        return $this->GymPoints !== null;
    }

    /**
     * Get 'GymPoints' value
     *
     * @return int
     */
    public function getGymPoints()
    {
        return $this->GymPoints;
    }

    /**
     * Set 'GymPoints' value
     *
     * @param int $value
     */
    public function setGymPoints($value)
    {
        $this->GymPoints = $value;
    }

    /**
     * Check if 'IsInBattle' has a value
     *
     * @return bool
     */
    public function hasIsInBattle()
    {
        return $this->IsInBattle !== null;
    }

    /**
     * Get 'IsInBattle' value
     *
     * @return bool
     */
    public function getIsInBattle()
    {
        return $this->IsInBattle;
    }

    /**
     * Set 'IsInBattle' value
     *
     * @param bool $value
     */
    public function setIsInBattle($value)
    {
        $this->IsInBattle = $value;
    }

    /**
     * Check if 'ActivePokemon' has a value
     *
     * @return bool
     */
    public function hasActivePokemon()
    {
        return $this->ActivePokemon !== null;
    }

    /**
     * Get 'ActivePokemon' value
     *
     * @return \Protobuf\PokemonGo\ResponseEnvelop\MapPokemonProto
     */
    public function getActivePokemon()
    {
        return $this->ActivePokemon;
    }

    /**
     * Set 'ActivePokemon' value
     *
     * @param \Protobuf\PokemonGo\ResponseEnvelop\MapPokemonProto $value
     */
    public function setActivePokemon(\Protobuf\PokemonGo\ResponseEnvelop\MapPokemonProto $value = null)
    {
        $this->ActivePokemon = $value;
    }

    /**
     * Check if 'CooldownCompleteMs' has a value
     *
     * @return bool
     */
    public function hasCooldownCompleteMs()
    {
        return $this->CooldownCompleteMs !== null;
    }

    /**
     * Get 'CooldownCompleteMs' value
     *
     * @return int
     */
    public function getCooldownCompleteMs()
    {
        return $this->CooldownCompleteMs;
    }

    /**
     * Set 'CooldownCompleteMs' value
     *
     * @param int $value
     */
    public function setCooldownCompleteMs($value)
    {
        $this->CooldownCompleteMs = $value;
    }

    /**
     * Check if 'Sponsor' has a value
     *
     * @return bool
     */
    public function hasSponsor()
    {
        return $this->Sponsor !== null;
    }

    /**
     * Get 'Sponsor' value
     *
     * @return int
     */
    public function getSponsor()
    {
        return $this->Sponsor;
    }

    /**
     * Set 'Sponsor' value
     *
     * @param int $value
     */
    public function setSponsor($value)
    {
        $this->Sponsor = $value;
    }

    /**
     * Check if 'RenderingType' has a value
     *
     * @return bool
     */
    public function hasRenderingType()
    {
        return $this->RenderingType !== null;
    }

    /**
     * Get 'RenderingType' value
     *
     * @return int
     */
    public function getRenderingType()
    {
        return $this->RenderingType;
    }

    /**
     * Set 'RenderingType' value
     *
     * @param int $value
     */
    public function setRenderingType($value = null)
    {
        $this->RenderingType = $value;
    }

    /**
     * {@inheritdoc}
     */
    public function extensions()
    {
        if ( $this->extensions !== null) {
            return $this->extensions;
        }

        return $this->extensions = new \Protobuf\Extension\ExtensionFieldMap(__CLASS__);
    }

    /**
     * {@inheritdoc}
     */
    public function unknownFieldSet()
    {
        return $this->unknownFieldSet;
    }

    /**
     * {@inheritdoc}
     */
    public static function fromStream($stream, \Protobuf\Configuration $configuration = null)
    {
        return new self($stream, $configuration);
    }

    /**
     * {@inheritdoc}
     */
    public static function fromArray(array $values)
    {
        if ( ! isset($values['FortId'])) {
            throw new \InvalidArgumentException('Field "FortId" (tag 1) is required but has no value.');
        }

        if ( ! isset($values['LastModifiedMs'])) {
            throw new \InvalidArgumentException('Field "LastModifiedMs" (tag 2) is required but has no value.');
        }

        if ( ! isset($values['Latitude'])) {
            throw new \InvalidArgumentException('Field "Latitude" (tag 3) is required but has no value.');
        }

        if ( ! isset($values['Longitude'])) {
            throw new \InvalidArgumentException('Field "Longitude" (tag 4) is required but has no value.');
        }

        if ( ! isset($values['Team'])) {
            throw new \InvalidArgumentException('Field "Team" (tag 5) is required but has no value.');
        }

        if ( ! isset($values['GuardPokemonId'])) {
            throw new \InvalidArgumentException('Field "GuardPokemonId" (tag 6) is required but has no value.');
        }

        if ( ! isset($values['GuardPokemonLevel'])) {
            throw new \InvalidArgumentException('Field "GuardPokemonLevel" (tag 7) is required but has no value.');
        }

        if ( ! isset($values['Enabled'])) {
            throw new \InvalidArgumentException('Field "Enabled" (tag 8) is required but has no value.');
        }

        if ( ! isset($values['FortType'])) {
            throw new \InvalidArgumentException('Field "FortType" (tag 9) is required but has no value.');
        }

        if ( ! isset($values['GymPoints'])) {
            throw new \InvalidArgumentException('Field "GymPoints" (tag 10) is required but has no value.');
        }

        if ( ! isset($values['IsInBattle'])) {
            throw new \InvalidArgumentException('Field "IsInBattle" (tag 11) is required but has no value.');
        }

        if ( ! isset($values['CooldownCompleteMs'])) {
            throw new \InvalidArgumentException('Field "CooldownCompleteMs" (tag 14) is required but has no value.');
        }

        if ( ! isset($values['Sponsor'])) {
            throw new \InvalidArgumentException('Field "Sponsor" (tag 15) is required but has no value.');
        }

        $message = new self();
        $values  = array_merge([
            'ActivePokemon' => null,
            'RenderingType' => null
        ], $values);

        $message->setFortId($values['FortId']);
        $message->setLastModifiedMs($values['LastModifiedMs']);
        $message->setLatitude($values['Latitude']);
        $message->setLongitude($values['Longitude']);
        $message->setTeam($values['Team']);
        $message->setGuardPokemonId($values['GuardPokemonId']);
        $message->setGuardPokemonLevel($values['GuardPokemonLevel']);
        $message->setEnabled($values['Enabled']);
        $message->setFortType($values['FortType']);
        $message->setGymPoints($values['GymPoints']);
        $message->setIsInBattle($values['IsInBattle']);
        $message->setActivePokemon($values['ActivePokemon']);
        $message->setCooldownCompleteMs($values['CooldownCompleteMs']);
        $message->setSponsor($values['Sponsor']);
        $message->setRenderingType($values['RenderingType']);

        return $message;
    }

    /**
     * {@inheritdoc}
     */
    public static function descriptor()
    {
        return \google\protobuf\DescriptorProto::fromArray([
            'name'      => 'PokemonFortProto',
            'field'     => [
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 1,
                    'name' => 'FortId',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REQUIRED()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 2,
                    'name' => 'LastModifiedMs',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REQUIRED()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 3,
                    'name' => 'Latitude',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_DOUBLE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REQUIRED()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 4,
                    'name' => 'Longitude',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_DOUBLE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REQUIRED()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 5,
                    'name' => 'Team',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REQUIRED()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 6,
                    'name' => 'GuardPokemonId',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REQUIRED()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 7,
                    'name' => 'GuardPokemonLevel',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REQUIRED()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 8,
                    'name' => 'Enabled',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REQUIRED()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 9,
                    'name' => 'FortType',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REQUIRED()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 10,
                    'name' => 'GymPoints',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REQUIRED()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 11,
                    'name' => 'IsInBattle',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REQUIRED()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 13,
                    'name' => 'ActivePokemon',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.pokemongo.ResponseEnvelop.MapPokemonProto'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 14,
                    'name' => 'CooldownCompleteMs',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REQUIRED()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 15,
                    'name' => 'Sponsor',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REQUIRED()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 16,
                    'name' => 'RenderingType',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
            ],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function toStream(\Protobuf\Configuration $configuration = null)
    {
        $config  = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = $config->createWriteContext();
        $stream  = $context->getStream();

        $this->writeTo($context);
        $stream->seek(0);

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function writeTo(\Protobuf\WriteContext $context)
    {
        $stream      = $context->getStream();
        $writer      = $context->getWriter();
        $sizeContext = $context->getComputeSizeContext();

        if ($this->FortId === null) {
            throw new \UnexpectedValueException('Field "\\Protobuf\\PokemonGo\\ResponseEnvelop\\PokemonFortProto#FortId" (tag 1) is required but has no value.');
        }

        if ($this->LastModifiedMs === null) {
            throw new \UnexpectedValueException('Field "\\Protobuf\\PokemonGo\\ResponseEnvelop\\PokemonFortProto#LastModifiedMs" (tag 2) is required but has no value.');
        }

        if ($this->Latitude === null) {
            throw new \UnexpectedValueException('Field "\\Protobuf\\PokemonGo\\ResponseEnvelop\\PokemonFortProto#Latitude" (tag 3) is required but has no value.');
        }

        if ($this->Longitude === null) {
            throw new \UnexpectedValueException('Field "\\Protobuf\\PokemonGo\\ResponseEnvelop\\PokemonFortProto#Longitude" (tag 4) is required but has no value.');
        }

        if ($this->Team === null) {
            throw new \UnexpectedValueException('Field "\\Protobuf\\PokemonGo\\ResponseEnvelop\\PokemonFortProto#Team" (tag 5) is required but has no value.');
        }

        if ($this->GuardPokemonId === null) {
            throw new \UnexpectedValueException('Field "\\Protobuf\\PokemonGo\\ResponseEnvelop\\PokemonFortProto#GuardPokemonId" (tag 6) is required but has no value.');
        }

        if ($this->GuardPokemonLevel === null) {
            throw new \UnexpectedValueException('Field "\\Protobuf\\PokemonGo\\ResponseEnvelop\\PokemonFortProto#GuardPokemonLevel" (tag 7) is required but has no value.');
        }

        if ($this->Enabled === null) {
            throw new \UnexpectedValueException('Field "\\Protobuf\\PokemonGo\\ResponseEnvelop\\PokemonFortProto#Enabled" (tag 8) is required but has no value.');
        }

        if ($this->FortType === null) {
            throw new \UnexpectedValueException('Field "\\Protobuf\\PokemonGo\\ResponseEnvelop\\PokemonFortProto#FortType" (tag 9) is required but has no value.');
        }

        if ($this->GymPoints === null) {
            throw new \UnexpectedValueException('Field "\\Protobuf\\PokemonGo\\ResponseEnvelop\\PokemonFortProto#GymPoints" (tag 10) is required but has no value.');
        }

        if ($this->IsInBattle === null) {
            throw new \UnexpectedValueException('Field "\\Protobuf\\PokemonGo\\ResponseEnvelop\\PokemonFortProto#IsInBattle" (tag 11) is required but has no value.');
        }

        if ($this->CooldownCompleteMs === null) {
            throw new \UnexpectedValueException('Field "\\Protobuf\\PokemonGo\\ResponseEnvelop\\PokemonFortProto#CooldownCompleteMs" (tag 14) is required but has no value.');
        }

        if ($this->Sponsor === null) {
            throw new \UnexpectedValueException('Field "\\Protobuf\\PokemonGo\\ResponseEnvelop\\PokemonFortProto#Sponsor" (tag 15) is required but has no value.');
        }

        if ($this->FortId !== null) {
            $writer->writeVarint($stream, 10);
            $writer->writeString($stream, $this->FortId);
        }

        if ($this->LastModifiedMs !== null) {
            $writer->writeVarint($stream, 16);
            $writer->writeVarint($stream, $this->LastModifiedMs);
        }

        if ($this->Latitude !== null) {
            $writer->writeVarint($stream, 25);
            $writer->writeDouble($stream, $this->Latitude);
        }

        if ($this->Longitude !== null) {
            $writer->writeVarint($stream, 33);
            $writer->writeDouble($stream, $this->Longitude);
        }

        if ($this->Team !== null) {
            $writer->writeVarint($stream, 40);
            $writer->writeVarint($stream, $this->Team);
        }

        if ($this->GuardPokemonId !== null) {
            $writer->writeVarint($stream, 48);
            $writer->writeVarint($stream, $this->GuardPokemonId);
        }

        if ($this->GuardPokemonLevel !== null) {
            $writer->writeVarint($stream, 56);
            $writer->writeVarint($stream, $this->GuardPokemonLevel);
        }

        if ($this->Enabled !== null) {
            $writer->writeVarint($stream, 64);
            $writer->writeBool($stream, $this->Enabled);
        }

        if ($this->FortType !== null) {
            $writer->writeVarint($stream, 72);
            $writer->writeVarint($stream, $this->FortType);
        }

        if ($this->GymPoints !== null) {
            $writer->writeVarint($stream, 80);
            $writer->writeVarint($stream, $this->GymPoints);
        }

        if ($this->IsInBattle !== null) {
            $writer->writeVarint($stream, 88);
            $writer->writeBool($stream, $this->IsInBattle);
        }

        if ($this->ActivePokemon !== null) {
            $writer->writeVarint($stream, 106);
            $writer->writeVarint($stream, $this->ActivePokemon->serializedSize($sizeContext));
            $this->ActivePokemon->writeTo($context);
        }

        if ($this->CooldownCompleteMs !== null) {
            $writer->writeVarint($stream, 112);
            $writer->writeVarint($stream, $this->CooldownCompleteMs);
        }

        if ($this->Sponsor !== null) {
            $writer->writeVarint($stream, 120);
            $writer->writeVarint($stream, $this->Sponsor);
        }

        if ($this->RenderingType !== null) {
            $writer->writeVarint($stream, 128);
            $writer->writeVarint($stream, $this->RenderingType);
        }

        if ($this->extensions !== null) {
            $this->extensions->writeTo($context);
        }

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function readFrom(\Protobuf\ReadContext $context)
    {
        $reader = $context->getReader();
        $length = $context->getLength();
        $stream = $context->getStream();

        $limit = ($length !== null)
            ? ($stream->tell() + $length)
            : null;

        while ($limit === null || $stream->tell() < $limit) {

            if ($stream->eof()) {
                break;
            }

            $key  = $reader->readVarint($stream);
            $wire = \Protobuf\WireFormat::getTagWireType($key);
            $tag  = \Protobuf\WireFormat::getTagFieldNumber($key);

            if ($stream->eof()) {
                break;
            }

            if ($tag === 1) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->FortId = $reader->readString($stream);

                continue;
            }

            if ($tag === 2) {
                \Protobuf\WireFormat::assertWireType($wire, 3);

                $this->LastModifiedMs = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 3) {
                \Protobuf\WireFormat::assertWireType($wire, 1);

                $this->Latitude = $reader->readDouble($stream);

                continue;
            }

            if ($tag === 4) {
                \Protobuf\WireFormat::assertWireType($wire, 1);

                $this->Longitude = $reader->readDouble($stream);

                continue;
            }

            if ($tag === 5) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->Team = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 6) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->GuardPokemonId = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 7) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->GuardPokemonLevel = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 8) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->Enabled = $reader->readBool($stream);

                continue;
            }

            if ($tag === 9) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->FortType = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 10) {
                \Protobuf\WireFormat::assertWireType($wire, 3);

                $this->GymPoints = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 11) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->IsInBattle = $reader->readBool($stream);

                continue;
            }

            if ($tag === 13) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \Protobuf\PokemonGo\ResponseEnvelop\MapPokemonProto();

                $this->ActivePokemon = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 14) {
                \Protobuf\WireFormat::assertWireType($wire, 3);

                $this->CooldownCompleteMs = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 15) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->Sponsor = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 16) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->RenderingType = $reader->readVarint($stream);

                continue;
            }

            $extensions = $context->getExtensionRegistry();
            $extension  = $extensions ? $extensions->findByNumber(__CLASS__, $tag) : null;

            if ($extension !== null) {
                $this->extensions()->add($extension, $extension->readFrom($context, $wire));

                continue;
            }

            if ($this->unknownFieldSet === null) {
                $this->unknownFieldSet = new \Protobuf\UnknownFieldSet();
            }

            $data    = $reader->readUnknown($stream, $wire);
            $unknown = new \Protobuf\Unknown($tag, $wire, $data);

            $this->unknownFieldSet->add($unknown);

        }
    }

    /**
     * {@inheritdoc}
     */
    public function serializedSize(\Protobuf\ComputeSizeContext $context)
    {
        $calculator = $context->getSizeCalculator();
        $size       = 0;

        if ($this->FortId !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->FortId);
        }

        if ($this->LastModifiedMs !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->LastModifiedMs);
        }

        if ($this->Latitude !== null) {
            $size += 1;
            $size += 8;
        }

        if ($this->Longitude !== null) {
            $size += 1;
            $size += 8;
        }

        if ($this->Team !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->Team);
        }

        if ($this->GuardPokemonId !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->GuardPokemonId);
        }

        if ($this->GuardPokemonLevel !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->GuardPokemonLevel);
        }

        if ($this->Enabled !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->FortType !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->FortType);
        }

        if ($this->GymPoints !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->GymPoints);
        }

        if ($this->IsInBattle !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->ActivePokemon !== null) {
            $innerSize = $this->ActivePokemon->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->CooldownCompleteMs !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->CooldownCompleteMs);
        }

        if ($this->Sponsor !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->Sponsor);
        }

        if ($this->RenderingType !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->RenderingType);
        }

        if ($this->extensions !== null) {
            $size += $this->extensions->serializedSize($context);
        }

        return $size;
    }

    /**
     * {@inheritdoc}
     */
    public function clear()
    {
        $this->FortId = null;
        $this->LastModifiedMs = null;
        $this->Latitude = null;
        $this->Longitude = null;
        $this->Team = null;
        $this->GuardPokemonId = null;
        $this->GuardPokemonLevel = null;
        $this->Enabled = null;
        $this->FortType = null;
        $this->GymPoints = null;
        $this->IsInBattle = null;
        $this->ActivePokemon = null;
        $this->CooldownCompleteMs = null;
        $this->Sponsor = null;
        $this->RenderingType = null;
    }

    /**
     * {@inheritdoc}
     */
    public function merge(\Protobuf\Message $message)
    {
        if ( ! $message instanceof \Protobuf\PokemonGo\ResponseEnvelop\PokemonFortProto) {
            throw new \InvalidArgumentException(sprintf('Argument 1 passed to %s must be a %s, %s given', __METHOD__, __CLASS__, get_class($message)));
        }

        $this->FortId = ($message->FortId !== null) ? $message->FortId : $this->FortId;
        $this->LastModifiedMs = ($message->LastModifiedMs !== null) ? $message->LastModifiedMs : $this->LastModifiedMs;
        $this->Latitude = ($message->Latitude !== null) ? $message->Latitude : $this->Latitude;
        $this->Longitude = ($message->Longitude !== null) ? $message->Longitude : $this->Longitude;
        $this->Team = ($message->Team !== null) ? $message->Team : $this->Team;
        $this->GuardPokemonId = ($message->GuardPokemonId !== null) ? $message->GuardPokemonId : $this->GuardPokemonId;
        $this->GuardPokemonLevel = ($message->GuardPokemonLevel !== null) ? $message->GuardPokemonLevel : $this->GuardPokemonLevel;
        $this->Enabled = ($message->Enabled !== null) ? $message->Enabled : $this->Enabled;
        $this->FortType = ($message->FortType !== null) ? $message->FortType : $this->FortType;
        $this->GymPoints = ($message->GymPoints !== null) ? $message->GymPoints : $this->GymPoints;
        $this->IsInBattle = ($message->IsInBattle !== null) ? $message->IsInBattle : $this->IsInBattle;
        $this->ActivePokemon = ($message->ActivePokemon !== null) ? $message->ActivePokemon : $this->ActivePokemon;
        $this->CooldownCompleteMs = ($message->CooldownCompleteMs !== null) ? $message->CooldownCompleteMs : $this->CooldownCompleteMs;
        $this->Sponsor = ($message->Sponsor !== null) ? $message->Sponsor : $this->Sponsor;
        $this->RenderingType = ($message->RenderingType !== null) ? $message->RenderingType : $this->RenderingType;
    }


}

